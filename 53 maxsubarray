Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

Example:

Input: [-2,1,-3,4,-1,2,1,-5,4],
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.

def max_subarray(array):
    max_so_far = max_ending_here = array[0]
    start_index=0
    end_index=0
    
    for i in range(1,len(array)):
        temp_start_index = temp_end_index =None
        if array[i] > array[i]+max_ending_here:
            max_ending_here = array[i]
            temp_start_index = temp_end_index = i
        else:
            temp_end_index=i
            max_ending_here = max_ending_here + array[i]
        
        if max_so_far < max_ending_here:
            max_so_far = max_ending_here
            if temp_start_index !=None:
                start_index = temp_start_index
            end_index = i
    print(max_so_far,start_index,end_index)
    
array = [-2, 1, -3, 4, -1, 2, 1, 8, -5, 4,7]
max_subarray(array)
            
