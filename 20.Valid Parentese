Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true

def opsit(s:str)->bool:
    if s=="(":
        return ")"
    elif s==")":
        return "("
    elif s=="[":
        return "]"
    elif s=="]":
        return "["
    else:
        return "not valid"

def isvalid(s:str):
    length=len(s)-1
    i=0
    while (i < length):
        if s[i]=="not valid":
            return "-3"
        if opsit(s[i])!=s[length]:
            print (s[i],s[length])
            print("this is not a valid string")
            return -1
        else:
            i+=1
            length-=1
    return 0

if __name__=="__main__":
    a=isvalid("(([])))")
    print(a)
