class Solution:
    def minMutation(self, start: str, end: str, bank: List[str]) -> int:
        
        def validchange(str1,str2):
            change = 0
            if len(str1) != len(str2):
                return False
            
            for i in range(len(str1)):
                if str1[i] != str2[i]:
                    change +=1
                    if change >=2:
                        return False
            return True
        
        
        stack = [[start,0]]
        visited = set()
        while stack:
            curr,step = stack.pop(0)
            
            if curr == end: return step
            visited.add(curr)
            
            for item in bank:
                if validchange(curr,item) and item not in visited:
                    stack.append([item,step+1])
        return -1
