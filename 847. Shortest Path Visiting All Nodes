class Solution:
    def shortestPathLength(self, graph: List[List[int]]) -> int:
        stack = []
        total = len(graph)
        # each bit represent the node, 111=7 equals node 0,1,2 
        finish_mark = 2**total -1 
        
        for i in range(total):
            stack.append((i,1<<i))
             
        step = 0
        visited= [[0] * (1<<total) for _ in range(total)]
        
        while stack:
            size = len(stack)
            while size:
                p = stack.pop(0)
                size -= 1
                node = p[0]
                val = p[1]
                if val == finish_mark: 
                    return step
                
                if visited[node][val]:
                    continue
                visited[node][val] = 1
                for item in graph[node]:
                    stack.append((item,val|(1<<item)))
            step += 1
        
        return step
        
        
        
