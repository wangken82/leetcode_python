Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
return its minimum depth = 2.


import sys
class tree(object):
    def __init__(self,x):
        self.val=x
        self.right=None
        self.left=None

class Solution:
    def minDepth(self,root:tree)->int:
        if not root:
            return 0
        if not root.left and not root.right:
            return 1       
   
        left= self.minDepth(root.left)  if not root.left else sys.maxsize
        right=self.minDepth(root.right) if not root.right else sys.maxsize
            
        return min(left,right)+1
        
