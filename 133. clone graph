from collections import defaultdict
"""
# Definition for a Node.
class Node:
    def __init__(self, val = 0, neighbors = None):
        self.val = val
        self.neighbors = neighbors if neighbors is not None else []
"""

class Solution:
    def cloneGraph(self, node: 'Node') -> 'Node':
        mymap = defaultdict(Node)   
        
        def getnode(node,mymap):
            if node == None:
                return None
            if node in mymap:
                return mymap[node]
            else:
                newnode = Node()
                newnode.val = node.val
                newnode.neighbors = []
                mymap[node] = newnode
                for item in node.neighbors:
                    newnode.neighbors.append(getnode(item,mymap))
                return newnode
        return getnode(node,mymap)
