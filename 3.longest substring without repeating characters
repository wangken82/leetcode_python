Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring

class findmaxstr(object):
    def length_str(self,s):
        sub=''
        max_len=0
    
        for i in s:
            if i not in sub:
                sub+=i
                print(sub)
                max_len=max(max_len,len(sub))
            else:
                index=sub.index(i)
                sub=sub[index+1:]+i
        return max_len
        
if __name__=="__main__":        
    print("Please input an string")
    s=input()
    look_str=findmaxstr()
    print(look_str.length_str(s))
