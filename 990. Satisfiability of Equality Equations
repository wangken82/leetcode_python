class Solution:
    def equationsPossible(self, equations: List[str]) -> bool:
        var = set()
        
        for i in range(len(equations)):
            var.add(equations[i][0])
            var.add(equations[i][3])
        
        father = {i:i for i in var}
        
        def find(x):
            while x != father[x]:
                father[x] = father[father[x]]
                x = father[x]
            return x
        
        def union(x,y):
            rootx = find(x)
            rooty = find(y)
            if rootx == rooty:
                return
            father[rootx] = rooty
        
        temp = []
        for item in equations:
            if item[1] == "=":
                union(item[0],item[3])
            else:
                temp.append(item)

        for k in temp:           
            if find(k[0]) == find(k[3]):
                return False
        
        return True
                
        
